#!/bin/bash
set -e
shopt -s extglob
cd "$(dirname "$0")"

if [[ $# -ne 4 ]]; then 
	echo "Usage: $0 <major> <minor> <patch> <path to correct Xcode.app>"
	exit 1
fi

export DEVELOPER_DIR="$4/Contents/Developer/"

info() { echo "[info] $1"; }

version="$1.$2.$3"
file_name="swift-${version}-RELEASE-osx"
package="${file_name}-package.pkg"

mkdir -p toolchains
cd toolchains
info "Downloading macOS toolchain"
if [[ ! -f "toolchain-${version}.pkg" ]]; then
	curl -#o "toolchain-${version}.pkg" "https://swift.org/builds/swift-${version}-release/xcode/swift-${version}-RELEASE/${file_name}.pkg"
fi

info "Unpacking toolchain"
# remove any pre-existing usr dir first
rm -rf usr
xar -xf "toolchain-${version}.pkg" "${package}/Payload"
tar -xzf "${package}/Payload" "usr"
rm -rf "${package}"

info "Modifying macOS toolchain"
cd usr
rm -r bin lib/libclang.dylib lib/sourcekitd.framework lib/libswiftDemangle.dylib lib/swift/!(clang|iphoneos|shims|migrator) lib/swift_static/!(iphoneos) libexec local
cd lib/swift/iphoneos
for file in libswift*.dylib; do
	# symlink to the libswift package
	ln -fs "/usr/lib/libswift/${version}/${file}" "${file}"
done
cd ../../../..

info "Installing dependencies"
type brew &>/dev/null || ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
type cmake &>/dev/null || brew install cmake
type ninja &>/dev/null || brew install ninja

info "Checking out Swift repo"
mkdir -p swift-source
cd swift-source
if [[ ! -d swift ]]; then
	git clone https://github.com/apple/swift.git
fi
swift/utils/update-checkout --clone --scheme "swift-${1}.${2}-branch" --reset-to-remote

# compile swift
info "Compiling Swift"
# FIXME: This seems to be broken on High Sierra (at least when building Swift < 4.2)
swift/utils/build-script \
--build-subdir=LLVMClangSwift_iphoneos \
--release \
-- \
--install-swift \
--install-destdir=output \
--swift-install-components="compiler;clang-builtin-headers;stdlib;sdk-overlay;editor-integration;tools;sourcekit-xpc-service;swift-remote-mirror;swift-remote-mirror-headers;" \
--install-prefix=/usr \
--cross-compile-hosts=iphoneos-arm64 \
--compiler-vendor=apple \
--swift-primary-variant-sdk=IOS \
--swift-primary-variant-arch=arm64 \
--build-toolchain-only=1 \
--build-swift-static-stdlib=1 \
--build-swift-dynamic-stdlib=1 \
--build-swift-static-sdk-overlay=1 \
--build-swift-dynamic-sdk-overlay=1 \
--build-runtime-with-host-compiler=1 \
--skip-local-host-install \
--skip-build-benchmarks \
--llvm-include-tests=0 \
--llvm-enable-modules=0 \
--build-swift-examples=0 \
--swift-include-tests=0 \
--darwin-deployment-version-ios=10.0 \
--darwin-crash-reporter-client=1 \
--reconfigure
cd ..

info "Merging toolchains"
cp -a swift-source/output/merged-hosts/usr/bin usr/
cp swift-source/output/merged-hosts/usr/lib/libswiftDemangle.dylib usr/lib/
cd usr/
# Codesign any Mach-O files, also adding the correct entitlements
find . \( -type f \( -name '*.dylib' -or \( -path './bin/*' -not -name '*.py' \) \) -or \( -path '*.framework/*' -not -name '*.*' \) -not -name '.DS_Store' \) -print0 | xargs -0 -I{} sh -c "ldid -S../../ent.xml {} || :"

echo "${version}" > ../.version
